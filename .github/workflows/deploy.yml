on:
  push:
    branches:
      - main

jobs:
  build_and_push:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    steps:
       - name: Checkout repo
         uses: actions/checkout@v3

       - name: Log in to Docker Hub
         uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
         with:
           username: ${{ secrets.DOCKER_USER }}
           password: ${{ secrets.DOCKER_SECRET }}

       - name: Build and push image
         run: |
           docker compose -f docker-compose-build.yml build
           docker compose -f docker-compose-build.yml push

  server_update:
    needs: build_and_push
    name: Deploy to server
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
      - name: Copy compose
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          source: "docker-compose-prod.yml"
          target: /usr/diabetes-ui/

      - name: Set up SSH agent
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_KEY }}
      - name: Connect
        uses: appleboy/ssh-action@master
        env:
          NUXT_APP_MODEL_URL: ${{ secrets.NUXT_APP_MODEL_URL }}
          IMAGE_NAME: ${{ secrets.DOCKER_USER }}/${{ secrets.DOCKER_REPO }}
          PORT: ${{ secrets.PORT }}
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          envs: IMAGE_NAME, PORT, NUXT_APP_MODEL_URL
          script: |
            # Check if IMAGE_NAME is empty
            if [ -z "$IMAGE_NAME" ]; then
              echo "ERROR: IMAGE_NAME environment variable is empty"
              exit 1
            fi
            
            export IMAGE_NAME=$IMAGE_NAME

            echo ${{ secrets.DOCKER_SECRET }} | docker login -u ${{ secrets.DOCKER_USER }} --password-stdin
            
            cd /usr/diabetes-ui/
            
            echo "Removing existing images"
            docker compose -f docker-compose-prod.yml down --rmi "all"
            
            echo "Removing image existing container"
            docker compose -f docker-compose-prod.yml rm -fs

            echo "Pullin an image"
            docker compose -f docker-compose-prod.yml pull

            echo "Running an image"
            docker compose -f docker-compose-prod.yml up -d